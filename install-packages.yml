---
- name: Install Arch Linux packages
  hosts: localhost
  become: true
  gather_facts: false

  collections:
    - community.general

  vars:
    # Core system packages
    system_packages:
      - networkmanager
      - sudo
      - which
      - nvim
      - less
      - man
      - tree
      - tmux
      - git
      - fastfetch
      - pacman-contrib
      - pipewire
      - pipewire-pulse
      - pipewire-alsa
      - pipewire-jack
      - wireplumber
      - pavucontrol
      - wireplumber
      - libldac
      # - libopenaptx # This is not available using Pacman, so use yay
      # - fdk-aac # This is not available using Pacman, so use yay
      - rtkit
      - reflector
      - rsync
      - openssh
      - unzip
      - ripgrep
      - btop
      - dysk
      - fzf
      - ark
      - dolphin
      - shellcheck
      - cmake
      - solaar
      - stow
      - starship
      - playerctl

    # AUR system packages
    aur_system_packages:
      - slack-desktop
      - zen-browser-bin
      - 1password
      - prettierd # This is a development package but not available in Pacman
      - python-imageio-ffmpeg

    # Fonts
    fonts:
      - ttf-font-awesome
      - ttf-jetbrains-mono
      - terminus-font
      - ttf-nerd-fonts-symbols
      - ttf-nerd-fonts-symbols-mono

    # Desktop environment packages
    desktop_packages:
      # KDE - Plasma
      #- plasma-meta
      #- sddm
      #- sddm-kcm
      #- qt5-declarative
      #- kvantum
      #- solaar
      #i3 Windows Manager
      #- xorg
      #- xorg-xinit
      #- i3-wm
      #- i3lock
      #- xautolock # Not available on pacman, use yay instead
      #- i3blocks
      #- i3status
      #- dmenu
      #- feh
      #- picom
      #- materia-gtk-theme
      #- papirus-icon-theme
      #- lxappearance
      #- arandr
      #- rofi
      #- fuse2
      #- libnotify
      #- dunst
      #- xdotool
      # Hyprland Window Manager
      - waybar
      - hyprpaper
      - wofi
      - wl-clipboard
      - cliphist
      - hyprshot
      - hyprlock
      - hypridle
      - swaync

    # Graphics and display packages
    graphics_packages:
      #- nvidia-open
      - nvidia-settings

    # Terminal and applications
    app_packages:
      - kitty
      #- firefox
      - maim
      - calibre
      - mupdf
      - zathura
      - newsboat
      - emacs
      - fd
      - thunderbird
      #- steam

    # Bluetooth packages
    bluetooth_packages:
      # There is bug with a2dp sink.
      - bluez
      - bluez-utils
      - blueman

    # Package management and development
    dev_packages:
      - flatpak
      - python-pip
      - python-ansible
      - base-devel
      - lazygit
      - pyright
      - yaml-language-server
      - ansible-language-server
      - python-imageio

    ml4w_dotfiles_aur_dependencies:
      - python-screeninfo
      - wlogout
      - gum
      - hyprland
      - hyprpaper
      - hyprlock
      - hypridle
      - hyprpicker
      - uwsm
      - eza
      - nwg-look
      - rofi-wayland
      - hyprshade
      - waypaper
      - grimblast-git
      - bibata-cursor-theme-bin
      - pacseek
      - nwg-dock-hyprland
      - checkupdates-with-aur
      - python-pywalfox
      - python-imageio-ffmpeg
      - python-imageio

    ml4w_dotfiles_dependencies:
      - wget
      - unzip
      - rsync
      - git
      - figlet
      - xdg-user-dirs
      - noto-fonts
      - noto-fonts-emoji
      - noto-fonts-cjk
      - noto-fonts-extra
      - xdg-desktop-portal-hyprland
      - libnotify
      - kitty
      - qt5-wayland
      - qt6-wayland
      - fastfetch
      - xdg-desktop-portal-gtk
      - python-pip
      - python-gobject
      - tumbler
      - brightnessctl
      - nm-connection-editor
      - network-manager-applet
      - gtk4
      - libadwaita
      - fuse2
      - imagemagick
      - jq
      - xclip
      - neovim
      - htop
      - rust
      - cargo
      - blueman
      - grim
      - slurp
      - cliphist
      - qt6ct
      - waybar
      - polkit-gnome
      - zsh
      - zsh-completions
      - fzf
      - pavucontrol
      - papirus-icon-theme
      - breeze
      - flatpak
      - swaync
      - gvfs
      - otf-font-awesome
      - ttf-fira-sans
      - ttf-fira-code
      - ttf-firacode-nerd
      - ttf-dejavu
      - power-profiles-daemon
      - vlc

    # Combine all packages
    all_packages: "{{ system_packages + aur_system_packages + fonts + desktop_packages + graphics_packages + app_packages + bluetooth_packages + dev_packages + ml4w_dotfiles_dependencies + ml4w_dotfiles_aur_dependencies }}"

  tasks:
    - name: Create the `aur_builder` user
      ansible.builtin.user:
        name: aur_builder
        create_home: yes
        group: wheel

    - name: Allow the `aur_builder` user to run `sudo pacman` without a password
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/11-install-aur_builder
        line: "aur_builder ALL=(ALL) NOPASSWD: /us/bin/pacman"
        create: yes
        mode: 0644
        validate: "visudo -cf %s"

    - name: Update package database
      community.general.pacman:
        update_cache: yes
      register: pacman_update

    - name: Install system packages
      community.general.pacman:
        name: "{{ system_packages }}"
        state: present
        update_cache: no
      register: system_install

    - name: Install AUR system packages
      kewlfft.aur.aur:
        name: "{{ aur_system_packages }}"
        use: makepkg
        state: present
      become_user: aur_builder

    - name: Install ml4w_dotfiles_aur_dependencies
      kewlfft.aur.aur:
        name: "{{ ml4w_dotfiles_aur_dependencies }}"
        use: yay
        state: present
      become_user: aur_builder
      tags: dotfiles-setup

    - name: Install desktop environment packages
      community.general.pacman:
        name: "{{ desktop_packages }}"
        state: present
        update_cache: no
      register: desktop_install

    - name: Install graphics packages
      community.general.pacman:
        name: "{{ graphics_packages }}"
        state: present
        update_cache: no
      register: graphics_install

    - name: Install application packages
      community.general.pacman:
        name: "{{ app_packages }}"
        state: present
        update_cache: no
      register: app_install

    - name: Install bluetooth packages
      community.general.pacman:
        name: "{{ bluetooth_packages }}"
        state: present
        update_cache: no
      register: bluetooth_install

    - name: Install development packages
      community.general.pacman:
        name: "{{ dev_packages }}"
        state: present
        update_cache: no
      register: dev_install

    - name: Install ml4w_dotfiles dependencies
      community.general.pacman:
        name: "{{ ml4w_dotfiles_dependencies }}"
        state: present
        update_cache: no
      register: ml4w_install
      tags: dotfiles-setup

    - name: Enable and start NetworkManager
      systemd:
        name: NetworkManager
        enabled: yes
        state: started
      when: system_install is changed or system_install is success

    #- name: Enable and start SDDM
    #  systemd:
    #    name: sddm
    #    enabled: yes
    #    state: started
    #  when: desktop_install is changed or desktop_install is success

    - name: Enable and start bluetooth service
      systemd:
        name: bluetooth
        enabled: yes
        state: started
      when: bluetooth_install is changed or bluetooth_install is success

    - name: Display installation summary
      debug:
        msg: |
          Package installation completed successfully!

          Installed packages by category:
          - System: {{ system_packages | length }} packages
          - AUR System: {{ aur_system_packages | length }} packages
          - Desktop: {{ desktop_packages | length }} packages  
          - Graphics: {{ graphics_packages | length }} packages
          - Applications: {{ app_packages | length }} packages
          - Bluetooth: {{ bluetooth_packages | length }} packages
          - Development: {{ dev_packages | length }} packages
          - ML4W Dotfiles: {{ ml4w_dotfiles_dependencies | length }} packages



          Total packages installed: {{ all_packages | length }}

          Next steps:
          1. Reboot the system to ensure all services start properly
          2. Configure SDDM display manager if needed
          3. Set up NetworkManager connections
          4. Configure bluetooth devices
          5. Install Flatpak applications as needed
